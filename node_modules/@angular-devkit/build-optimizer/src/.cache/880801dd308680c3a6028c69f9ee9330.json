{"remainingRequest":"C:\\Users\\Chief Accountant\\Desktop\\frontPTS\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Chief Accountant\\Desktop\\frontPTS\\node_modules\\@agm\\core\\services\\managers\\kml-layer-manager.js","dependencies":[{"path":"C:\\Users\\Chief Accountant\\Desktop\\frontPTS\\node_modules\\@agm\\core\\services\\managers\\kml-layer-manager.js","mtime":499162500000},{"path":"C:\\Users\\Chief Accountant\\Desktop\\frontPTS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Chief Accountant\\Desktop\\frontPTS\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GoogleMapsAPIWrapper } from './../google-maps-api-wrapper';\n/**\n * Manages all KML Layers for a Google Map instance.\n */\nvar KmlLayerManager = /** @class */ /*@__PURE__*/ (function () {\n    function KmlLayerManager(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new KML Layer to the map.\n     */\n    /**\n       * Adds a new KML Layer to the map.\n       */\n    KmlLayerManager.prototype.addKmlLayer = /**\n       * Adds a new KML Layer to the map.\n       */\n        function (layer) {\n            var newLayer = this._wrapper.getNativeMap().then(function (m) {\n                return new google.maps.KmlLayer({\n                    clickable: layer.clickable,\n                    map: m,\n                    preserveViewport: layer.preserveViewport,\n                    screenOverlays: layer.screenOverlays,\n                    suppressInfoWindows: layer.suppressInfoWindows,\n                    url: layer.url,\n                    zIndex: layer.zIndex\n                });\n            });\n            this._layers.set(layer, newLayer);\n        };\n    KmlLayerManager.prototype.setOptions = function (layer, options) {\n        this._layers.get(layer).then(function (l) { return l.setOptions(options); });\n    };\n    KmlLayerManager.prototype.deleteKmlLayer = function (layer) {\n        var _this = this;\n        this._layers.get(layer).then(function (l) {\n            l.setMap(null);\n            _this._layers.delete(layer);\n        });\n    };\n    /**\n     * Creates a Google Maps event listener for the given KmlLayer as an Observable\n     */\n    /**\n       * Creates a Google Maps event listener for the given KmlLayer as an Observable\n       */\n    KmlLayerManager.prototype.createEventObservable = /**\n       * Creates a Google Maps event listener for the given KmlLayer as an Observable\n       */\n        function (eventName, layer) {\n            var _this = this;\n            return new Observable(function (observer) {\n                _this._layers.get(layer).then(function (m) {\n                    m.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n                });\n            });\n        };\n    return KmlLayerManager;\n}());\nexport { KmlLayerManager };\n//# sourceMappingURL=kml-layer-manager.js.map\n",null]}